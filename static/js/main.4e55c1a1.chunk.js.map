{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/AccountSummary.js","components/Transaction.js","components/TransactionHistory.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","_jsxs","className","children","_jsx","AppReducer","state","action","type","_objectSpread","transactions","payload","concat","_toConsumableArray","filter","transaction","id","initialState","GlobalContext","createContext","GlobalProvider","_ref","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","Provider","value","delTransaction","addTransaction","Balance","balance","useContext","map","transactionAmount","reduce","acc","item","toFixed","AccountSummary","transactionAmounts","income","expense","Math","abs","Transaction","sign","transactionType","description","onClick","TransactionHistory","AddTransaction","_useState","useState","_useState2","setDescription","_useState3","_useState4","setTransactionAmount","onSubmit","e","preventDefault","newTransaction","Date","getTime","htmlFor","onChange","target","placeholder","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"2NAEaA,EAAS,WACpB,OACEC,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BC,cAAA,MAAAD,SAAI,oBACJC,cAAA,QAAMF,UAAU,GAAEC,SAAC,gBAGzB,E,qBCQeE,EAjBK,SAACC,EAAOC,GACxB,OAAOA,EAAOC,MACV,IAAK,kBACD,OAAAC,wBAAA,GACOH,GAAK,IACRI,aAAa,CAAEH,EAAOI,SAAOC,OAAAC,YAAKP,EAAMI,iBAEhD,IAAK,qBACD,OAAAD,wBAAA,GACOH,GAAK,IACRI,aAAcJ,EAAMI,aACfI,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOT,EAAOI,OAAO,MAEpE,QACI,OAAOL,EAEnB,ECXMW,EAAe,CACjBP,aAAc,IAGLQ,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAHC,GAAsB,IAAhBlB,EAAQkB,EAARlB,SAC7BmB,EAA0BC,qBAAWlB,EAAWY,GAAaO,EAAAC,YAAAH,EAAA,GAAtDhB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GAiBtB,OACIpB,cAACc,EAAcS,SAAQ,CAACC,MACpB,CACIlB,aAAcJ,EAAMI,aACpBmB,eAlBZ,SAAwBb,GACpBU,EAAS,CACLlB,KAAM,qBACNG,QAASK,GAEjB,EAcYc,eAZZ,SAAwBf,GACpBW,EAAS,CACLlB,KAAM,kBACNG,QAASI,GAEjB,GASKZ,SACIA,GAGb,ECpCa4B,EAAU,WACrB,IAIMC,EAJmBC,qBAAWf,GAA5BR,aACgCwB,KACtC,SAACnB,GAAW,OAAKA,EAAYoB,iBAAiB,IAG7CC,QAAO,SAACC,EAAKC,GAAI,OAAMD,EAAOC,CAAI,GAAG,GACrCC,QAAQ,GACX,OACEtC,eAAA,OAAAE,SAAA,CACEC,cAAA,MAAAD,SAAI,oBACJF,eAAA,MAAIe,GAAG,UAASb,SAAA,CAAC,IAAE6B,OAGzB,ECdaQ,EAAiB,WAE1B,IAEMC,EAFmBR,qBAAWf,GAA5BR,aAEgCwB,KAAI,SAAAnB,GAAW,OAAIA,EAAYoB,iBAAiB,IAElFO,EAASD,EACV3B,QAAO,SAAAC,GAAW,OAAIA,EAAc,CAAC,IACrCqB,QAAO,SAACC,EAAKtB,GAAW,OAAMsB,EAAOtB,CAAW,GAAG,GACnDwB,QAAQ,GAEPI,EAAUC,KAAKC,IAAIJ,EACpB3B,QAAO,SAAAC,GAAW,OAAIA,EAAc,CAAC,IACrCqB,QAAO,SAACC,EAAKtB,GAAW,OAAMsB,EAAOtB,CAAW,GAAG,IAClDwB,QAAQ,GAEd,OACItC,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BF,eAAA,OAAAE,SAAA,CACIC,cAAA,MAAAD,SAAI,WACJF,eAAA,KAAGC,UAAU,aAAYC,SAAA,CAAC,IACrBuC,QAGTzC,eAAA,OAAAE,SAAA,CACIC,cAAA,MAAAD,SAAI,YACJF,eAAA,KAAGC,UAAU,cAAaC,SAAA,CAAC,IACtBwC,UAMrB,ECnCaG,EAAc,SAAHzB,GAAyB,IAAnBN,EAAWM,EAAXN,YACpBc,EAAmBI,qBAAWf,GAA9BW,eACFkB,EAAOhC,EAAYoB,kBAAoB,EAAI,IAAM,IACjDa,EAAkBjC,EAAYoB,kBAAoB,EAAI,OAAS,QAErE,OACElC,eAAA,MAAIC,UAAW8C,EAAgB7C,SAAA,CAC5BY,EAAYkC,YACbhD,eAAA,QAAAE,SAAA,CACG4C,EAAK,IAAEH,KAAKC,IAAI9B,EAAYoB,sBAE/B/B,cAAA,UAAQF,UAAU,aAAagD,QAAS,kBAAMrB,EAAed,EAAYC,GAAG,EAACb,SAAC,QAGpF,ECXagD,EAAqB,WAE9B,IAAQzC,EAAiBuB,qBAAWf,GAA5BR,aACR,OACET,eAAA,OAAAE,SAAA,CACIC,cAAA,MAAAD,SAAI,wBACJC,cAAA,MAAIF,UAAU,OAAMC,SACjBO,EAAawB,KAAI,SAACnB,GAAW,OAC5BX,cAAC0C,EAAW,CAAsB/B,YAAaA,GAA7BA,EAAYC,GAA+B,QAK3E,ECbaoC,EAAiB,WAE1B,IAAAC,EAAsCC,mBAAS,IAAGC,EAAA9B,YAAA4B,EAAA,GAA3CJ,EAAWM,EAAA,GAAEC,EAAcD,EAAA,GAClCE,EAAkDH,mBAAS,IAAGI,EAAAjC,YAAAgC,EAAA,GAAvDtB,EAAiBuB,EAAA,GAAEC,EAAoBD,EAAA,GAEtC5B,EAAmBG,qBAAWf,GAA9BY,eAeR,OACI7B,eAAA,OAAAE,SAAA,CACIC,cAAA,MAAAD,SAAI,wBACJF,eAAA,QAAM2D,SAhBG,SAACC,GACdA,EAAEC,iBAEF,IAAMC,EAAiB,CACnB/C,IAAI,IAAIgD,MAAOC,UACfhB,cACAd,mBAAoBA,GAGxBL,EAAeiC,EAEnB,EAKiC5D,SAAA,CACrBF,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBC,cAAA,SAAO8D,QAAQ,cAAa/D,SAAC,gBAG7BC,cAAA,SAAQI,KAAK,OACLQ,GAAG,cACHY,MAAOqB,EACPkB,SAAU,SAACN,GAAC,OAAKL,EAAeK,EAAEO,OAAOxC,MAAM,EAC/CyC,YAAY,wBACZC,SAAS,gBAGrBrE,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBC,cAAA,SAAO8D,QAAQ,oBAAmB/D,SAAC,uBAGnCC,cAAA,SAAQI,KAAK,SACLQ,GAAG,oBACHY,MAAOO,EACPgC,SAAU,SAACN,GAAC,OAAKF,EAAqBE,EAAEO,OAAOxC,MAAM,EACrDyC,YAAY,8BACZC,SAAS,gBAGrBlE,cAAA,UAAQF,UAAU,MAAKC,SAAC,yBAIxC,ECjCeoE,MAdf,WACE,OACGtE,eAACmB,EAAc,CAAAjB,SAAA,CACfC,cAACJ,EAAM,IACPC,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAC2B,EAAO,IACR3B,cAACoC,EAAc,IACfpC,cAAC+C,EAAkB,IACnB/C,cAACgD,EAAc,SAItB,ECXeoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAtD,GAAkD,IAA/CuD,EAAMvD,EAANuD,OAAQC,EAAMxD,EAANwD,OAAQC,EAAMzD,EAANyD,OAAQC,EAAM1D,EAAN0D,OAAQC,EAAO3D,EAAP2D,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJAQ,IAASC,OACP9E,cAAC+E,IAAMC,WAAU,CAAAjF,SACfC,cAACmE,EAAG,MAENc,SAASC,eAAe,SAM1Bd,G","file":"static/js/main.4e55c1a1.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  return (\n    <div className=\"main-heading\">\n      <h1>Expense Tracker</h1>\n      <span className=\"\">(Reactjs)</span>\n    </div>\n  );\n};\n","const AppReducer = ((state, action) => {\n    switch(action.type) {\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions\n                    .filter(transaction => transaction.id !== action.payload)\n            }\n        default:\n            return state;\n    };\n});\nexport default AppReducer;","import React, { createContext, useReducer} from 'react';\n\nimport AppReducer from './AppReducer';\n\n//Create the Initial State\nconst initialState = {\n    transactions: []\n}\n\nexport const GlobalContext = createContext(initialState);\n\n//Create the provider for Global Context\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer,initialState);\n\n    //Actions for Transaction\n    function delTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        });\n    }\n    // Add new Transaction Action\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        });\n    }\n\n    return (\n        <GlobalContext.Provider value={\n            {\n                transactions: state.transactions,\n                delTransaction,\n                addTransaction\n            }\n        }>\n            {children}\n        </GlobalContext.Provider>\n    );\n}","import React, { useContext } from \"react\";\n\n//Import the Global State\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n  const transactionAmounts = transactions.map(\n    (transaction) => transaction.transactionAmount\n  );\n  const balance = transactionAmounts\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n  return (\n    <div>\n      <h4>Current Balance</h4>\n      <h1 id=\"balance\">${balance}</h1>\n    </div>\n  );\n};\n","import React, { useContext } from 'react'\n\n// Import the Global State\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AccountSummary = () => {\n\n    const { transactions } = useContext(GlobalContext);\n\n    const transactionAmounts = transactions.map(transaction => transaction.transactionAmount);\n\n    const income = transactionAmounts\n        .filter(transaction => transaction > 0)\n        .reduce((acc, transaction) => (acc += transaction), 0)\n        .toFixed(2);\n\n    const expense = Math.abs(transactionAmounts\n        .filter(transaction => transaction < 0)\n        .reduce((acc, transaction) => (acc += transaction), 0)\n        ).toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"money plus\">$\n                    {income}\n                </p>\n            </div>\n            <div>\n                <h4>Expense</h4> \n                <p className=\"money minus\">$\n                    {expense}\n                </p>\n            </div>\n            \n        </div>\n    )\n}","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = ({ transaction }) => {\n  const { delTransaction } = useContext(GlobalContext);\n  const sign = transaction.transactionAmount > 0 ? \"+\" : \"-\";\n  const transactionType = transaction.transactionAmount > 0 ? 'plus' : 'minus';\n\n  return (\n    <li className={transactionType}>\n      {transaction.description}\n      <span>\n        {sign}${Math.abs(transaction.transactionAmount)}\n      </span>\n      <button className=\"delete-btn\" onClick={() => delTransaction(transaction.id)}>X</button>\n    </li>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Transaction } from './Transaction';\n\n//Import the Global State\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const TransactionHistory = () => {\n\n    const { transactions } = useContext(GlobalContext);\n    return (\n      <div>\n          <h3>Transaction History</h3>\n          <ul className=\"list\">\n            {transactions.map((transaction) => (\n              <Transaction key={transaction.id} transaction={transaction}/>\n    ))}\n          </ul>\n      </div>  \n    );\n};","import React, { useState, useContext } from 'react';\n\n// Import the Global State\nimport { GlobalContext } from '../context/GlobalState';\n\n\nexport const AddTransaction = () => {\n\n    const [description, setDescription] = useState('');\n    const [transactionAmount, setTransactionAmount] = useState('');\n\n    const { addTransaction } = useContext(GlobalContext);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const newTransaction = {\n            id: new Date().getTime(),\n            description,\n            transactionAmount: +transactionAmount\n        }\n\n        addTransaction(newTransaction);\n\n    }\n\n    return (\n        <div>\n            <h3>Add New Transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"description\">\n                        Description\n                    </label>\n                    <input  type=\"text\" \n                            id=\"description\"\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                            placeholder=\"Detail of Transaction\" \n                            required=\"required\"\n                    />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"transactionamount\">\n                        Transaction Amount\n                    </label>\n                    <input  type=\"number\" \n                            id=\"transactionamount\"\n                            value={transactionAmount}\n                            onChange={(e) => setTransactionAmount(e.target.value)}\n                            placeholder=\"Dollar Value of Transaction\"\n                            required=\"required\"\n                    />\n                </div>\n                <button className=\"btn\">Add Transaction</button>\n            </form>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { AccountSummary } from './components/AccountSummary';\nimport { TransactionHistory } from './components/TransactionHistory';\nimport { AddTransaction } from './components/AddTransaction';\n\n//Import Provider and wrap components with provider\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n     <GlobalProvider>\n     <Header/>\n     <div className=\"container\">\n       <Balance/>\n       <AccountSummary/>\n       <TransactionHistory/>\n       <AddTransaction/>\n     </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}